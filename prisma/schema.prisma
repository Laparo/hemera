// Prisma schema for Hemera
// Database: PostgreSQL (Neon/Vercel Postgres)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique(map: "users_email_unique") // enforced via partial unique index in SQL
  emailVerified DateTime?
  image         String?
  accounts      Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  type              String?
  access_token      String?
  refresh_token     String?
  expires_at        Int?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
}

// Course model for public SEO pages
model Course {
  id          String      @id @default(cuid())
  title       String
  description String
  slug        String      @unique
  imageUrl    String?
  level       CourseLevel
  duration    String
  price       Decimal?
  status      CourseStatus @default(DRAFT)
  isPublic    Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([isPublic, status])
  @@index([slug])
}

enum CourseLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum CourseStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
